filter {
  if "kubernetes" and "audit" in [tags] {
    # parse log entry as json
    json {
      source => "message"
      target => "audit_json"
    }

    # Extract timestamp of the acutal event and overwrite @timestamp
    date {
      match => [ "[audit_json][timestamp]", "ISO8601" ]
    }

    # Kubernetes audit logs may have different structure and so we need to handle 
    # some fields differently depending on their value type due to potential dynamic mapping conflicts.
    if [audit_json][responseObject][status] {
      if [audit_json][responseObject][status] !~ /^\w+$/ {
        mutate {
          rename => { 
            "[audit_json][responseObject][status]" => "[audit_json][responseObject][status_object]" 
          }
        }
      }
    }

    # remove original log entry, add tag
    mutate {
      remove_field => "message"
      remove_field => "[audit_json][timestamp]"
      add_tag => ["kubernetes_audit_filtered"]
    }
  }
}

output {
  if "kubernetes_audit_filtered" in [tags] {
    elasticsearch {
      id => "kubernetes_audit_es"
      index => "kubernetes-audit-%ELASTICSEARCH_INDEX_SUFFIX%%{+YYYY.MM.dd}"
      document_type => "audit"
      hosts => [ "%ELASTICSEARCH_HOST%" ]
      ssl => %ELASTICSEARCH_SSL_ENABLED%
      cacert => "%ELASTICSEARCH_CA_CERTIFICATE_PATH%"
      ssl_certificate_verification => %ELASTICSEARCH_CERTIFICATE_VERIFICATION%
      user => "%ELASTICSEARCH_USER%"
      password => "%ELASTICSEARCH_PASSWORD%"
      validate_after_inactivity => 60
    }
  }
}
