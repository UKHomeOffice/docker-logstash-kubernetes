# Mutate events to be suitable for pushing to Cloudwatch Logs
filter {
  if "kubernetes" and "docker" in [tags] {
    # check if message looks like json and try to decode it
    if [message] =~ /^{.*}$/ {
      json {
        source => "message"
        target => "container"
        add_tag => [ "container_json" ]
      }

    }

    # check if message["log"] looks like json and try to decode it and flatten
    # log fields out into a message field
    if [container][log] =~ /^{.*}$/ {
      json {
        source => "[container][log]"
        target => "[container]"
        remove_field => [ "[container][log]" ]
        add_tag => [ "container_app_json" ]
      }
    }

    # Grab a timestamp from the actual message, rather than at the point of
    # which events arrive
    date {
      match => ["[container][time]", "ISO8601"]
    }

    # Extract kubernetes metadata
    kubernetes {
      add_tag => ["kubernetes_filtered"]
    }
  }
}

output {
  if "kubernetes_filtered" in [tags] {
    gelf {
	host => "%GELF_HOST%"
	port => %GELF_PORT%
    }
  }
}
